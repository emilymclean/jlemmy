amends "pkl/build.pkl"
import "pkl/src/common.pkl" as common

projectName = "jlemmy"

local b = (import("pkl/build.pkl")) {
    projectName = "jlemmy"
}

jobs = (b.jobs) {
    ["read-lemmy-version"] = new Job {
        outputs = new Mapping {
            ["lemmyVersion"] = "${{ steps.version.outputs.lemmyVersion }}"
        }
        steps = new Listing {
            (common.checkout) {
                with = new Mapping {
                    ["fetch-depth"] = 0
                    ["submodules"] = true
                }
            }
            new CommandStep {
                id = "version"
                run = """
                regex='"version": "(.*)",'
                contents="$(cat ./type-generator/lemmy-js-client/package.json | grep "version")"
                if [[ $contents =~ $regex ]]
                then
                    echo ${BASH_REMATCH[1]}
                    lemmyVersion=${BASH_REMATCH[1]} >> $GITHUB_OUTPUT
                else
                    echo Zoinks Scoob!
                    exit 1;
                fi
                """
            }
        }
    }
    ["version"] = new Job {
        outputs = new Mapping {
            ["version"] = "${{ steps.version.outputs.version }}"
        }
        needs = new Listing {
            "read-lemmy-version"
        }
        steps = new Listing {
            common.checkout
            new ActionStep {
                name = "Install GitVersion"
                uses = "gittools/actions/gitversion/setup@v0.9.6"
                with = new Mapping {
                    ["versionSpec"] = "5.x"
                }
            }
            new ActionStep {
                name = "Use GitVersion"
                id = "gitversion"
                uses = "gittools/actions/gitversion/execute@v0.9.6"
                with = new Mapping {
                    ["useConfigFile"] = true
                    ["configFilePath"] = "./gitversion.yml"
                }
            }
            new CommandStep {
                id = "version"
                run = "version=${{ needs.read-lemmy-version.outputs.lemmyVersion }}-${{ steps.gitversion.outputs.semVer }} >> $GITHUB_OUTPUT"
            }
            new CommandStep {
                name = "Display SemVer"
                run = "echo \"SemVer: ${{ needs.read-lemmy-version.outputs.lemmyVersion }}-${{ steps.gitversion.outputs.semVer }}\""
            }
        }
    }
}